{"keys":[{"path":["title"],"id":"title","weight":1,"src":"title"},{"path":["body"],"id":"body","weight":1,"src":"body"}],"records":[{"i":0,"$":{"0":{"v":"This page has not yet sprouted","n":0.408},"1":{"v":"[Dendron](https://dendron.so/) (the tool used to generate this site) lets authors selective publish content. You will see this page whenever you click on a link to an unpublished page\n\n![](https://foundation-prod-assetspublic53c57cce-8cpvgjldwysl.s3-us-west-2.amazonaws.com/assets/images/not-sprouted.png)","n":0.189}}},{"i":1,"$":{"0":{"v":"Cy Blogs","n":0.707},"1":{"v":"\n# Welcome to Cy Blog\n\n> This website is generated by a Dendron template. \n\nExplore with me!\n","n":0.25}}},{"i":2,"$":{"0":{"v":"Chores","n":1}}},{"i":3,"$":{"0":{"v":"journal","n":1}}},{"i":4,"$":{"0":{"v":"2023","n":1}}},{"i":5,"$":{"0":{"v":"02","n":1}}},{"i":6,"$":{"0":{"v":"2023-02-10","n":1},"1":{"v":"I fell on the bus yesterday and sit on my yogurt today. Show me some luck please.\n\nImplemented rnn to score text embeddings with tfjs. I do not think my professors like me. But the code works either way.\n\nAnd I think ChatGPT produces some bad codes that would delay my work even worse. I guess I better depend on my own codes. Like copilot, I am so easily misguided, so not entitled to use these tools probably.","n":0.115}}},{"i":7,"$":{"0":{"v":"2023-02-08","n":1},"1":{"v":"\nJesus, how many days have I not updated my journals?\n\nToday's little thought: I wonder how many people use another workspace to draft and play with components. I find myself doing it very commonly. It is hard to always keep up the style and the regulation of a large project. So I have some local playground where I can just quickly test out algorithms or new packages without tampering with the important stuff. \n\n# School\n\nDid some cloth algorithm for my graphics lab today! \n\nMade a simple cloud pie chart with svg clipping path after coming back home.\n\n# Research\n\nWorking on the low-fi prototype.\n\nI desperately need the SSD disk for my steam deck which I am using as my main work station. 64G is not enough at all. I ran out of space three times over the weekend!","n":0.086}}},{"i":8,"$":{"0":{"v":"2023-02-04","n":1},"1":{"v":"Read the two papers mentioned in [[Chores.journal.2023.02.01]] over the weekend. Very unproductive on Sunday. But I needed a break.\n\n# School\n\nGroup meeting for data visualization. Done my other reports and stuff. The interactive machine learning professors promised to reply my email last week. Yet, I've heard nothing back from them. I have to start working on it no matter what. Because my chores are piling up.\n\n# Research\n\nNo progress whatsoever.","n":0.121}}},{"i":9,"$":{"0":{"v":"2023-02-02","n":1},"1":{"v":"Discussed new design with Prof. I decided to completely remove permission management from the design at all. A drastical change, but as he implied, the version control solves permission management problem naturally.\n\nTechnically, I think webstrates + nodegit would work, no other frameworks required. I will use indexdb to test the solution first. I do not know how long it would take to get it work. Time is such a precious thing to me. I have five projects awaiting for implementations in two weeks. \n\nFor the [[Computer Graphics.universal particles]], I was told to implement the rigid body and spring contraints only. I have not yet finished this week's lab. Will do it tomorrow after getting the literature review of _interactive [[NLP]] model builder_ done for interactive machine learning class.\n\n","n":0.088}}},{"i":10,"$":{"0":{"v":"2023-02-01","n":1},"1":{"v":"\nReturned the books to library.\n\nFinished some school works for this week. \n\nArticulated an idea to implement for biking navigation.\n\nWatched [Catherine Called Birdy](https://www.imdb.com/title/tt11727866/).\n\nNew design sketches for the collaborative tool with fine-grained permission management. Tomorrow discuss it with the Prof. again?\n\nRead [On Generative Spoken Language Modeling from Raw Audio](https://aclanthology.org/2021.tacl-1.79.pdf) and [“Show me the cup”: Reference with Continuous Representations](https://arxiv.org/pdf/1606.08777.pdf).","n":0.134}}},{"i":11,"$":{"0":{"v":"01","n":1}}},{"i":12,"$":{"0":{"v":"2023-01-31","n":1},"1":{"v":"\nGet [VSCode Tunnel](https://code.visualstudio.com/docs/remote/tunnels) up and running today. It is mindblowingly easy to use! So powerful! It turns every device into a fully functioned PC immediately as long as it has a browser. I love Web!\n\nTook my CG test in the afternoon. Clicked on the wrong choice for one. Ugh! This body never functions the way ordered by the brain. I know I should've got rid of it (not really).\n\nPassed out after I fixed myself some [noodles (Re Gan Mian)](https://en.wikipedia.org/wiki/Hot_dry_noodles) at about 8pm. Woke up at 11 in the horror of not getting any research done today. Found this [website](https://finnhub.io/) actually hosts the SEC filings for free with APIs. They also uploaded t[hese nice datasets](https://www.kaggle.com/datasets/finnhub/sec-filings?resource=download) for bulk downloading SEF filings. Anyway, downloaded some of the datasets to my google drive first with colab scripts. My steam deck work station does not have enough local disk for them. But the raw 10-X data is way too large even for google drive free limit. I am looking at [Scaleway](https://www.scaleway.com/en/). Not sure if it is really free.\n\n\n\n","n":0.076}}},{"i":13,"$":{"0":{"v":"2023-01-30","n":1},"1":{"v":"\n\n## School\nBoring. Sent an email to argue for a better grade. Mission impossible; did it anyway.\n\n## Research\nFine-gained permission management system stalled a little bit. I shall find time to talk with Prof. Michel and Prof. James Eagan.\n\nFinance word list is pushing on track. Some ideas nailed and seem promising. Datasets hunt went well, marked in Kaggle. More work to do: [[Notes with My Mate.todolist]].\n\n\n","n":0.125}}},{"i":14,"$":{"0":{"v":"Templates","n":1}}},{"i":15,"$":{"0":{"v":"Daily Chores Dump","n":0.577},"1":{"v":"## School\n\n\n## Research\n\n\n","n":0.577}}},{"i":16,"$":{"0":{"v":"Notes with My Mate","n":0.5},"1":{"v":"\nOur recent topic: textual analysis on Finance and the McDonald word list and NLP.\n\nI am surpised at how finance people are doing their textual analysis. Of course, all the filings are extremely useful albeit the outdated methods. \n\n[This AWS paper is pretty nice.](https://www.sciencedirect.com/science/article/pii/S2405918821000131) Yet,\nmy mate said it failed to provide insights on how this would help finding returns. Apparently, the returns are more important than methods to come up with better word lists.\n\nHere are more to read for me to understand how textual analysis works in finance:\n\n[Some lit review on advanced textual analysis](https://www.sciencedirect.com/science/article/pii/S2405918822000046)\n\n[Another important work from McDonald](https://papers.ssrn.com/sol3/papers.cfm?abstract_id=2504147)\n\nI also have to start working on gathering datasets and data cleaning.\n\n[[Notes with My Mate.todolist]]\n\n-----------------\n2023.03.01 Update\n\nResearched on [FinBert](https://arxiv.org/pdf/1908.10063.pdf) and [FinBert from HKUST](https://github.com/yya518/FinBERT). We've also processed some basic disclosure texts with FinBert. This paper [What are You Saying? Using topic to Detect Financial Misreporting](https://papers.ssrn.com/sol3/papers.cfm?abstract_id=2803733) can guide us on retrieving misreport judgements from SEC. The author Richard Crowley has done a symposium sharing on using BERT to predict return, which is exactly what we are looking for.\n\nOur findings: \n1. FinBert does not actually perform better than Vanilla Bert. \n2. When the text is long, we split texts use paragraph breaks and calculate weights from the paragraph lenghts. This metric works better than average. It makes much more sense as well.\n\nNext step:\nExtract texts from 10-K and use BERT to extract features from them. To solve our previous issue with data, we found EDGAR which supplies API and online host for all the SEC filings we need and this open-source tool [SEC-EDGAR-text extraction](https://github.com/alions7000/SEC-EDGAR-text) for text extraction for the filings. \n\nSome other useful links:\n[sec-edgar python library](https://github.com/sec-edgar/sec-edgar)\n\n[python-edgar: master index for edgar](https://github.com/edgarminers/python-edgar)\n\n-----------------\n2023.03.05 Update\n\nSEC filings make sense because of the tables and numbers, not particularly the texts. So we have to use number-aware BERT, such as [SEC-BERT](https://huggingface.co/nlpaueb/sec-bert-base). Some other people fine-tuned it on [classification task](https://huggingface.co/nickmuchi/sec-bert-finetuned-finance-classification).\n\nCrowley used [OpenIE](https://nlp.stanford.edu/software/openie.html) to extract information and ontology from the texts. But probably going on step further, making it a knowledge graph and add weights on the edges would be more helpful.\n\nSo with this inspiration, we are looking at some new directions today:\n\n[heatmap generation](https://github.com/jiesutd/Text-Attention-Heatmap-Visualization)\n\n[knowledge graph skg](https://github.com/danilo-dessi/skg)\n\n[knowledge graph kgen](https://github.com/rossanez/KGen)\n\n[Bert + Knowledge Graph on legal data](https://github.com/AnjaneyaTripathi/knowledge_graph)\n\n[Text to KG](https://github.com/d1egoprog/Text2KG)\n\n[From unstructured text to knowledge graph](https://github.com/rutvik5/knowledge-graph)\n\n[graphGPT](https://github.com/varunshenoy/GraphGPT)\n\n[Standford CoreNLP](https://stanfordnlp.github.io/CoreNLP/demo.html)","n":0.052}}},{"i":17,"$":{"0":{"v":"todolist","n":1},"1":{"v":"\n- [x] Read the papers\n- [x] Find somewhere to host (this data)[https://sraf.nd.edu/loughranmcdonald-master-dictionary/]\n - Update: use EDGAR online host for all the SEC filings\n- [ ] Start working on recognize named entities, use bert or basic clustering probably?","n":0.164}}},{"i":18,"$":{"0":{"v":"NLP","n":1},"1":{"v":"\nTime to learn some NLP.\n\nJan. [[Chores.journal.2023.01.30]], 2023\n\n Currently working on [tensorflow.js](https://github.com/tensorflow/tfjs) and NLP models. I forked [marcelle.js](https://marcelle.dev) and added some components for language encoders and huggingface model api support at [here](https://github.com/cy-moi/marcelle/tree/0.0.6-sentence-encoder).\n\n Working on the literature review of an interactive machine learning process for producing automatic short text grading (ASAG/AEG?).\n\nFeb. [100 Must-Read NLP Papers](https://github.com/mhagiwara/100-nlp-papers)\n\n [Universal Sentence Encoder](https://arxiv.org/abs/1803.11175)\n\n [BERT](https://aclanthology.org/N19-1423.pdf)\n\n [Deep Contextualized Word Representations](https://arxiv.org/abs/1802.05365)\n\n [Distributed Representations of Words and Phrases and their Compositionality](https://arxiv.org/abs/1310.4546)\n\n [Distributed Representations of Sentences and Documents](https://arxiv.org/abs/1405.4053)","n":0.115}}},{"i":19,"$":{"0":{"v":"GSLM","n":1},"1":{"v":"\n## Generative Spoken Language Model\n\nI read this paper for multimodal dialogue class. Their approach bridges the gap between speech and language model and aims to learn natural languages with speech rather than texts. ","n":0.174}}},{"i":20,"$":{"0":{"v":"Computer Graphics","n":0.707},"1":{"v":"# My CG Knowledge Base\n\nIt is hard to remember all the CG knowledge, especially when I am not actively using any of them right now. Here, I backup some interesting things regarding CG and animations. \n\nIt is nice to know there are many [CG internships](https://www.asso-afig.fr/site/offres/), thanks to [Professor Rohmer](https://imagecomputing.net/damien.rohmer/) for [X-INF585](https://imagecomputing.net/damien.rohmer/teaching/inf585/index.html). I am taking my notes for this class at [[Computer Graphics.X-INF585 Notes]] as well.\n\nMy previous education on computer graphics including learning with basic knowledge from Professor Jarek Rossignac and Professor Karen Liu's [computer graphics classes](https://faculty.cc.gatech.edu/~jarek/lectures/), computer aesthetics class, and [computer animation class](https://www.cc.gatech.edu/classes/AY2012/cs4496_spring/Home.html).\n\n\n[[Computer Graphics.Position Based System]]","n":0.102}}},{"i":21,"$":{"0":{"v":"X-INF585 Notes","n":0.707},"1":{"v":"All the lab sessions are documented at [the course content site](https://damienrohmer.com/data/teaching/2022_2023/x-inf585/practice/content/01_introduction/index.html).\nThe lab starter codes are at [Professor Rohmer's Git Repo](https://github.com/drohmer/inf585_code).\n\nThis class is using [cgp](https://github.com/drohmer/cgp) which provides basic tools for 3D scenes.","n":0.18}}},{"i":22,"$":{"0":{"v":"Universal Particles","n":0.707},"1":{"v":"\nBasically, it is \"a unified solver capable of simulating gases, liquids, deformable solids, rigid bodies, and cloth, interacting with one another in real-time.\"\n\n### PBD - [Position Based Dynamics](https://matthias-research.github.io/pages/publications/posBasedDyn.pdf)\n> Typically positions are updated after each constraint is processed, and after a number of iterations a change in velocity is computed according to the total constraint delta: delta_x = delta_x/delta_t.\n\n### Rigid Body - [Rigid Shape matching](https://matthias-research.github.io/pages/publications/orientedParticles.pdf)\n\n> Shapes are created by first performing solid voxelization of a closed triangle mesh and placing particles at occupied cells interior to the shape. \n\n> Assign all particles in the shape the same phase-identifier, disable collision between them, and add a shape-matching constraint to the system.\n\n### SDF - Signed Distance Field \n> Sample the field function onto each particle belonging to a rigid shape. \n\n> Re-use all the machinery of the particle-particle collision detection to resolve deeper overlaps between shapes. \n\n> detect overlaps between particles with distance $|xi − xj | < r$. As the contact normal we choose the SDF gradient corresponding to the minimum translation distance, $d = min(|φi|, |φj |)$.\n\n$φ$ is the magnitude of the SDF.\n\n","n":0.074}}},{"i":23,"$":{"0":{"v":"Position Based System","n":0.577},"1":{"v":"Learn advanced stuff related to postion based dynamics to universal solvers. I was not particularly good at this topic, but it is super cool!\n\n\n> [[Computer Graphics.universal particles]]\n\nI've always been interested in [this paper](https://mmacklin.com/uppfrta_preprint.pdf).\n\nToday is the day I am gonna implement it.\n\nThe deadline is 3 weeks away.\n\nSome implementation I found:\n\n[CUDA + openGL physics engine](https://github.com/jamornsriwasansak/brass-pan)\n\n[Particel Solver](https://github.com/ebirenbaum/ParticleSolver)\n\n","n":0.136}}}]}
